<!DOCTYPE html>
<html lang="pl">
    <head>
        <meta charset="UTF-8">
        <title>HDMI Web stream</title>
    </head>
    <body>
        <script>
            async function makeCall() {
                const configuration = {
                    iceServers: [
                        {
                            urls: "stun:stun.l.google.com:19302"
                        }
                    ]
                };
                const peerConnection = new RTCPeerConnection(configuration);
                const offer = await peerConnection.createOffer();
                await peerConnection.setLocalDescription(offer);

                const iceCandidates = [];
                peerConnection.addEventListener("icecandidate", event => {
                    iceCandidates.push(event.candidate);
                });
                peerConnection.addEventListener("icegatheringstatechange", event => {
                    if (event.target.iceGatheringState === "complete") {
                        fetch("/ice", {
                            method: "POST",
                            body: JSON.stringify(iceCandidates)
                        })
                            .then(response => response.json())
                            .then(async remoteIceCandidates => {
                                for (const candidate of remoteIceCandidates) {
                                    await peerConnection.addIceCandidate(candidate);
                                }
                            });
                    }
                });

                const response = await fetch("/offer", {
                    method: "POST",
                    body: JSON.stringify(offer)
                });
                const answer = await response.json();

                const remoteDesc = new RTCSessionDescription(answer);
                await peerConnection.setRemoteDescription(remoteDesc);
            }
        </script>
    </body>
</html>